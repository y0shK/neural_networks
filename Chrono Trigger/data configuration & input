# hp, mp, power, hit, magic, evade, stamina, magicDef, speed - at level 1
chrono = np.array([70, 8, 5, 8, 5, 8, 8, 2, 12])
lucca = np.array([62, 12, 2, 8, 8, 7, 6, 7, 6])
robo = np.array([130, 6, 7, 7, 3, 7, 10, 1, 6])
ayla = np.array([80, 4, 10, 10, 3, 12, 9, 1, 13])
marle = np.array([65, 12, 2, 8, 8, 6, 6, 8, 8])
frog = np.array([80, 9, 4, 8, 6, 8, 8, 3, 11])
magus = np.array([110, 14, 8, 12, 10, 10, 7, 9, 12])

characterArray = [chrono, lucca, robo, ayla, marle, frog, magus]
characterStringArray = ["Chrono", "Lucca", "Robo", "Ayla", "Marle", "Frog", "Magus"]

print("Chrono, Lucca, Robo, Ayla, Marle, Frog, Magus")
print("Pick three CT characters. Please enter them as integers.")
print("Chrono = 0, Lucca = 1, etc.")
c1 = int(input())
c2 = int(input())
c3 = int(input())

if 0 <= c1 <= 7 and 0 <= c2 <= 7 and 0 <= c3 <= 7:
    party = [characterArray[c1], characterArray[c2], characterArray[c3]]
    partyString = [characterStringArray[c1], characterStringArray[c2], characterStringArray[c3]]
    for i in range(0, 3):
        print("Party member %s: %s" % ((i+1), partyString[i]))

# weights are hp, mp, power, and magic
# 0 is HP, 1 is MP, 2 and 4 are physical and magical slots respectively
computeWeights(c1, c2, c3, characterArray, 0, 1, 2, 4)

#add party type as bias to network
print("\nDo you want a physical, magical, or balanced party?")
party = input()

if party == "physical":
    computeBias(c1, c2, c3, characterArray, 2)
elif party == "magical":
    computeBias(c1, c2, c3, characterArray, 4)
elif party == "balanced":
    totalSum = computeBias(c1, c2, c3, characterArray, 2) + computeBias(c1, c2, c3, characterArray, 4)
    avgStat = totalSum / 2
else:
    print("Please try again with a legitimate party type")
